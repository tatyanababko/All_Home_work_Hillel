# Пользователь вводит вещественное число,
# округлить его до 0, 2, 5 цифр после запятой

float_number = float(input("Введите вещественное число: "))
print("Округление до 0 = ", round(float_number, 0))
print("Округление до 2 = ", round(float_number, 2))
print("Округление до 5 = ", round(float_number, 5))

# Дан список из N элементов, вывести его последний элемент,
# в этом задании нельзя использовать отрицательный индекс

lst = [2, 4, 6, 23, "drty", 4.6]
print(f"Дан список {lst}. Последний элемент списка = {lst[len(lst)-1]}")

# Пользователь вводит a, b, c после вводит формулу,
# в которой может использовать a,b,c.
# Вывести результат формулы.
# В этом задании можно использовать односимвольные имена для переменных

a = int(input("a = "))
b = int(input("b = "))
c = int(input("c = "))
expression = input("Выражение имеет вид: ")
print(f"Результат: {eval(expression)}")

# Дан список из N элементов,
# пользователь вводит 2 целых числа,
# вывести часть списка индекс начала которого равен первому введенному числу,
# а конец равен индексу второго введенного числа.

lst_first = [4, 7, 3, 50, 10, 4]
number_first = int(input("Введите первое число: "))
number_second = int(input("Введите второе число: "))
print(f"Часть списка имеет вид: {lst_first[number_first:number_second]}")

# Пользователь вводит строку,
# удалить из строки все повторяющиеся символы и вывести список с неповторяющимися символами

str = input("Введите строку: ")
print(list(dict.fromkeys(str)))

# Даны два множества,
# найти их пересечение и
# вывести разность первого и последнего элементов в пересечении

set_first = {2, 4, 8, 5, 4, 6, 9}
set_second = {3, 2, 8, 6}
intersection = set_first.intersection(set_first, set_second)
difference = list(intersection)[0] - list(intersection)[-1]
print(f"Пересечение двух множеств: {intersection}")
print(f"Разность первого и последнего элементов в пересечении = {difference}")

# Даны два списка из N элементов каждый,
# создать из двух списков один, который состоит из элементов первого и второго,
# удалить из него повторяющиеся

l_first = [3, 6, 7, 8, "dfr", "e", 0.54]
l_second = ["dfr", "e", 7, 5, 3]
new_l_first_plus_second = l_first + l_second
list_unical_elements = list(dict.fromkeys(new_l_first_plus_second))
print(f"Из двух списков один: {new_l_first_plus_second}\n"
      f"Без повторяющихся элементов: {list_unical_elements}")

# Дан кортеж из N элементов и список из N элементов
# вывести элементы которые есть как в кортеже так и в списке.

tpl = 3, 4, 6, 8, "frk", "r"
l_lst = [4, "frk", "t", 6]
print(f"Общие элементы: {list(set(tpl).intersection(set(tpl), set(l_lst)))}")